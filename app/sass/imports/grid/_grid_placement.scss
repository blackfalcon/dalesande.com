// supporting mixin for @mixin the_grid
// 'grid_placement' sets display, float and margin for the block
@mixin grid_placement($grid_uom, $grid_spec, $child, $margin: $base) {
	float: left;
	@include box_sizing;
	
	@if $child == alpha {
		@if $grid_uom == em {
			$margin_calc: #{$margin / $em}em;
			@include grid_margin_alpha($margin_calc);
		}
		@else if $grid_uom == percent {
			$margin_calc: #{$margin / $grid_960};
			@include grid_margin_alpha($margin_calc);
		}
		@else if $grid_uom == combo {
			$margin_calc: #{$margin / $em}em;
			@include grid_margin_alpha($margin_calc);
		}
	}
	
	@else if $child == omega {
		@if $grid_uom == em {
			$margin_calc: #{$margin / $em}em;
			@include grid_margin_omega($margin_calc);
		}
		@else if $grid_uom == percent {
			$margin_calc: #{$margin / $grid_960};
			@include grid_margin_omega($margin_calc);
		}
		@else if $grid_uom == combo {
			$margin_calc: #{$margin / $em}em;
			@include grid_margin_omega($margin_calc);
		}
	}
	
	@else if $child == alphaomega {
		margin-left: 0;
		margin-right: 0;
	}
	
	@else if $child == none {
		@if $grid_uom == em {
			$margin_calc: #{$margin / $em}em;
			@include grid_margin_default($margin_calc);
		}
		@else if $grid_uom == percent {
			$margin_calc: #{$margin / $grid_960};
			@include grid_margin_default($margin_calc);
		}
		@else if $grid_uom == combo {
			$margin_calc: #{$margin / $em}em;
			@include grid_margin_default($margin_calc);
		}
	}
	
		
}
